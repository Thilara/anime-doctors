{"version":3,"sources":["webpack:///./src/templates/schedule/schedule.js"],"names":["query","Voluntary","data","questionObject","schedulesJson","answers","allVolunteersObject","questionId","forEach","element","answerObject","find","i","push","answer","name","title","position","avatar","slug","getAnswers","allVolunteersJson","nodes","schedule","keywords","imageURL","file","publicURL","className","style","display","length","map","item","key","to","color","fluid","childImageSharp","alt","width","height","borderRadius","marginRight","flexGrow"],"mappings":"8OASaA,G,UAAK,cAuIHC,UApFG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAiBD,EAAKE,cACtBC,EApBW,SAACC,EAAqBC,GACvC,IAAMF,EAAc,GAcpB,OAbAC,EAAoBE,SAAQ,SAAAC,GAC1B,IAAMC,EAAeD,EAAQJ,QAAQM,MAAK,SAAAC,GAAC,OAAIA,EAAEL,aAAeA,KAC5DG,GACFL,EAAQQ,KAAK,CACXC,OAAQJ,EAAaI,OACrBC,KAAMN,EAAQM,KACdC,MAAOP,EAAQO,MACfC,SAAUR,EAAQQ,SAClBC,OAAQT,EAAQS,OAChBC,KAAMV,EAAQU,UAIbd,EAKSe,CACdlB,EAAKmB,kBAAkBC,MACvBnB,EAAeI,YAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,MAAOb,EAAeoB,SACtBC,SAAU,CAAC,YAAD,qGASVC,SAAUvB,EAAKwB,KAAKC,YAEtB,yBAAKC,UAAU,aACb,6BACA,6BACA,yBAAKA,UAAU,6BACb,uBAAGA,UAAU,aAAazB,EAAeoB,WAE3C,6BACA,yBAAKK,UAAU,2CACb,yBAAKA,UAAU,kBAAkBC,MAAO,CAAEC,QAAS,iBACjD,0BAAMF,UAAU,eAAevB,EAAQ0B,QACvC,0BAAMH,UAAU,kBAAhB,cAIN,6BACA,6BACA,6BACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACZvB,EAAQ2B,KAAI,SAAAC,GAAI,OACf,yBAAKL,UAAU,kCAAkCM,IAAKD,EAAKd,MACzD,uBAAGS,UAAU,wCACVK,EAAKnB,QAGR,kBAAC,OAAD,CAAMqB,GAAE,eAAiBF,EAAKd,KAAQU,MAAO,CAAEO,MAAO,SACpD,yBAAKR,UAAU,2DACb,kBAAC,IAAD,CACES,MAAOJ,EAAKf,OAAOoB,gBAAgBD,MACnCE,IAAKN,EAAKA,KACVJ,MAAO,CACLW,MAAO,GACPC,OAAQ,GACRC,aAAc,MACdC,YAAa,MAIjB,yBACEf,UAAU,qCACVC,MAAO,CAAEe,SAAU,IAEnB,6BACE,uBAAGhB,UAAU,kCAAb,cACc,IACZ,0BAAMC,MAAO,CAAEO,MAAO,sBACnB,IACAH,EAAKlB,KAAM,MAGhB,uBAAGa,UAAU,aAAaK,EAAKhB","file":"component---src-templates-schedule-schedule-js-fc0874c9bacd43f162a8.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport Layout from '../../components/layout';\nimport SEO from '../../components/seo/seo';\nimport './schedule.scss';\n\nexport const query = graphql`\n  query($slug: String!) {\n    schedulesJson(slug: { eq: $slug }) {\n      schedule\n      questionId\n      slug\n    }\n    file(relativePath: { eq: \"images/logo.png\" }) {\n      publicURL\n    }\n    allVolunteersJson(sort: { fields: timestamp, order: DESC }) {\n      nodes {\n        slug\n        name\n        title\n        position\n        avatar {\n          publicURL\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        answers {\n          questionId\n          answer\n        }\n      }\n    }\n  }\n`;\n\nconst getAnswers = (allVolunteersObject, questionId) => {\n  const answers: [] = [];\n  allVolunteersObject.forEach(element => {\n    const answerObject = element.answers.find(i => i.questionId === questionId);\n    if (answerObject) {\n      answers.push({\n        answer: answerObject.answer,\n        name: element.name,\n        title: element.title,\n        position: element.position,\n        avatar: element.avatar,\n        slug: element.slug,\n      });\n    }\n  });\n  return answers;\n};\n\nconst Voluntary = ({ data }) => {\n  const questionObject = data.schedulesJson;\n  const answers = getAnswers(\n    data.allVolunteersJson.nodes,\n    questionObject.questionId\n  );\n  return (\n    <Layout>\n      <SEO\n        title={questionObject.schedule}\n        keywords={[\n          `voluntary`,\n          `startups`,\n          `marketing`,\n          `social media expert`,\n          `facebook expert`,\n          `instagram expert`,\n          `whatsapp expert`\n        ]}\n        imageURL={data.file.publicURL}\n      />\n      <div className=\"container\">\n        <br />\n        <br />\n        <div className=\"schedule-page__item-block\">\n          <p className=\"is-size-3\">{questionObject.schedule}</p>\n        </div>\n        <br />\n        <div className=\"schedule-page__number has-text-centered\">\n          <div className=\"tags has-addons\" style={{ display: 'inline-block' }}>\n            <span className=\"tag is-dark\">{answers.length}</span>\n            <span className=\"tag is-primary\">Answers</span>\n          </div>\n        </div>\n      </div>\n      <br />\n      <br />\n      <br />\n      <div className=\"container\">\n        <div className=\"schedule-page__item-block\">\n          {answers.map(item => (\n            <div className=\"box schedule-page__answer-block\" key={item.slug}>\n              <p className=\"schedule-page__answer-text is-size-5\">\n                {item.answer}\n              </p>\n\n              <Link to={`/voluntario/${item.slug}`} style={{ color: '#666' }}>\n                <div className=\"media remove-margin-bottom schedule-page__profile-block\">\n                  <Image\n                    fluid={item.avatar.childImageSharp.fluid}\n                    alt={item.item}\n                    style={{\n                      width: 32,\n                      height: 32,\n                      borderRadius: '50%',\n                      marginRight: 10,\n                    }}\n                  />\n\n                  <div\n                    className=\"media-content remove-margin-bottom\"\n                    style={{ flexGrow: 0 }}\n                  >\n                    <div>\n                      <p className=\"is-size-7 remove-margin-bottom\">\n                        Answered by{' '}\n                        <span style={{ color: 'rgb(55, 124, 255)' }}>\n                          {' '}\n                          {item.name}{' '}\n                        </span>\n                      </p>\n                      <p className=\"is-size-7\">{item.position}</p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Voluntary;\n"],"sourceRoot":""}