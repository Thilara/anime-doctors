{"version":3,"sources":["webpack:///./src/templates/schedule/schedule.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo/seo.js","webpack:///./src/components/header/header.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["query","Voluntary","_ref","data","questionObject","schedulesJson","answers","allVolunteersObject","questionId","forEach","element","answerObject","find","i","push","answer","name","title","position","avatar","slug","getAnswers","allVolunteersJson","nodes","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo_seo__WEBPACK_IMPORTED_MODULE_6__","schedule","keywords","imageURL","file","publicURL","className","style","display","length","map","item","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","color","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fluid","childImageSharp","alt","width","height","borderRadius","marginRight","flexGrow","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","p","SEO","description","lang","meta","site","pageURL","_public_static_d_642828755_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","siteUrl","src","defaultProps","arrayOf","Header","render","react_default","role","aria-label","gatsby_browser_entry","Logo","target","rel","href","class","Component","Footer","id","Layout","Fragment","Helmet_default","integrity","crossorigin","header_header","this","props","children","footer_footer","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-templates-schedule-schedule-js-fe89a8c6542cacb09bd6.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport Layout from '../../components/layout';\nimport SEO from '../../components/seo/seo';\nimport './schedule.scss';\n\nexport const query = graphql`\n  query($slug: String!) {\n    schedulesJson(slug: { eq: $slug }) {\n      schedule\n      questionId\n      slug\n    }\n    file(relativePath: { eq: \"images/logo.png\" }) {\n      publicURL\n    }\n    allVolunteersJson(sort: { fields: timestamp, order: DESC }) {\n      nodes {\n        slug\n        name\n        title\n        position\n        avatar {\n          publicURL\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        answers {\n          questionId\n          answer\n        }\n      }\n    }\n  }\n`;\n\nconst getAnswers = (allVolunteersObject, questionId) => {\n  const answers: [] = [];\n  allVolunteersObject.forEach(element => {\n    const answerObject = element.answers.find(i => i.questionId === questionId);\n    if (answerObject) {\n      answers.push({\n        answer: answerObject.answer,\n        name: element.name,\n        title: element.title,\n        position: element.position,\n        avatar: element.avatar,\n        slug: element.slug,\n      });\n    }\n  });\n  return answers;\n};\n\nconst Voluntary = ({ data }) => {\n  const questionObject = data.schedulesJson;\n  const answers = getAnswers(\n    data.allVolunteersJson.nodes,\n    questionObject.questionId\n  );\n  return (\n    <Layout>\n      <SEO\n        title={questionObject.schedule}\n        keywords={[\n          `voluntary`,\n          `startups`,\n          `marketing`,\n          `social media expert`,\n          `facebook expert`,\n          `twitter expert`,\n          `instagram expert`,\n        ]}\n        imageURL={data.file.publicURL}\n      />\n      <div className=\"container\">\n        <br />\n        <br />\n        <div className=\"schedule-page__item-block\">\n          <p className=\"is-size-3\">{questionObject.schedule}</p>\n        </div>\n        <br />\n        <div className=\"schedule-page__number has-text-centered\">\n          <div className=\"tags has-addons\" style={{ display: 'inline-block' }}>\n            <span className=\"tag is-dark\">{answers.length}</span>\n            <span className=\"tag is-primary\">Answers</span>\n          </div>\n        </div>\n      </div>\n      <br />\n      <br />\n      <br />\n      <div className=\"container\">\n        <div className=\"schedule-page__item-block\">\n          {answers.map(item => (\n            <div className=\"box schedule-page__answer-block\" key={item.slug}>\n              <p className=\"schedule-page__answer-text is-size-5\">\n                {item.answer}\n              </p>\n\n              <Link to={`/voluntario/${item.slug}`} style={{ color: '#666' }}>\n                <div className=\"media remove-margin-bottom schedule-page__profile-block\">\n                  <Image\n                    fluid={item.avatar.childImageSharp.fluid}\n                    alt={item.item}\n                    style={{\n                      width: 32,\n                      height: 32,\n                      borderRadius: '50%',\n                      marginRight: 10,\n                    }}\n                  />\n\n                  <div\n                    className=\"media-content remove-margin-bottom\"\n                    style={{ flexGrow: 0 }}\n                  >\n                    <div>\n                      <p className=\"is-size-7 remove-margin-bottom\">\n                        Answered by{' '}\n                        <span style={{ color: 'rgb(55, 124, 255)' }}>\n                          {' '}\n                          {item.name}{' '}\n                        </span>\n                      </p>\n                      <p className=\"is-size-7\">{item.position}</p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Voluntary;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-3792f37776b90bc9c7d6783a328b0315.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title, imageURL, pageURL}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} | %s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:locale`,\n          content: `en_US`,\n        },\n        {\n          property: `og:site_name`,\n          content: `Volunteers By Smooper`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(imageURL ? [{\n          name: `image`,\n          content: site.siteMetadata.siteUrl + imageURL\n        },\n        {\n          property: `og:image`,\n          content: site.siteMetadata.siteUrl + imageURL\n        },\n        {\n          name: `twitter:image`,\n          content: site.siteMetadata.siteUrl + imageURL\n        }\n      ]: [])\n      .concat(meta)\n      }\n    >\n    <script src=\"https://embed.typeform.com/embed.js\" />\n    </Helmet>\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","// @flow\nimport React, { Component } from 'react';\nimport { Link } from 'gatsby';\n// import { OutboundLink } from 'gatsby-plugin-gtag'\nimport Logo from '../../images/logo.png';\n\nimport './header.scss';\n\ntype Props = {\n  onClick?: Function,\n};\n\nclass Header extends Component<Props> {\n  render() {\n    return (\n      <nav\n        className=\"navbar is-fixed-top\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link className=\"navbar-item\" to=\"/\">\n              <img src={Logo} alt=\"smoopit-logo\" height=\"100px\" width=\"auto\" />\n            </Link>\n          </div>\n\n          <div className=\"navbar-item\">\n            <div className=\"share\">\n              <ul>\n                <li>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/animedoctors/\"><i class=\"fab fa-facebook-f\"></i></a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"share\">\n              <ul>\n                <li>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/animedoctors/\"><i class=\"fab fa-instagram\"></i></a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\nimport React from 'react';\n\nimport './footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer id=\"footer\">\n      <div className=\"bottom-bar\">\n        Demonstrar amor ao próximo é sinal de um coração bom e generoso <span className=\"heart\">♥</span> ANIME DOCTORS\n        <br/>\n        Organizações sem fins lucrativos\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { Component } from 'react';\nimport Helmet from 'react-helmet';\n\nimport Header from './header/header';\nimport './layout.scss';\nimport Footer from './footer/footer';\n\ntype LayoutProps = {\n  children: any,\n};\nclass Layout extends Component<LayoutProps> {\n\n  render() {\n    return (\n      <>\n        <Helmet title={` Smooper`} meta={[]}>\n          <html lang=\"en\" />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\"\n            integrity=\"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/\"\n            crossorigin=\"anonymous\"\n          />\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,700');\n          </style>\n        </Helmet>\n        <Header />\n        <div className=\"content\">{this.props.children}</div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default Layout;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}